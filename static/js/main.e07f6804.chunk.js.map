{"version":3,"sources":["types/SortEnum.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers/filterTodos.ts","index.tsx"],"names":["SORT","actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","query","sortField","initialState","sort","ALL","filterReducer","_objectSpread","todos","todosReducer","concat","_toConsumableArray","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoItem","_ref","dispatch","current","_jsxs","children","_jsx","className","id","completed","classNames","title","onClick","currentTodoActions","TodoList","_Fragment","map","TodoFilter","_useAppSelector","onSubmit","event","preventDefault","value","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","userLoading","setUserLoading","useEffect","userId","finally","href","name","App","todosLoading","setTodosLoading","todosFromServer","todosActions","visibleTodos","initialTodos","todoCopy","lowerSearch","toLowerCase","trim","includes","ACTIVE","COMPLETED","filterTodos","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,uDCgBCC,EALG,SAACC,GAAU,MAAqB,CAC9CC,KAAM,kBACNC,QAASF,IAGED,EAPM,WAAH,MAA4B,CAAEE,KAAM,uBAwBrCE,EAZY,WAAiD,IAAhDC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAcH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOP,MACb,IAAK,kBACH,OAAOO,EAAON,QAChB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,I,QDzBZ,SAJWN,KAAI,OAAJA,EAAI,gBAAJA,EAAI,sBAIf,CAJWA,MAAI,KEQhB,IAYaC,EAZI,SAACU,GAAa,MAAmB,CAChDR,KAAM,mBACNC,QAASO,IAUEV,EAPG,SAACW,GAAe,MAAkB,CAChDT,KAAM,kBACNC,QAASQ,IAKEX,EAFM,WAAH,MAAuB,CAAEE,KAAM,uBAazCU,EAA4B,CAChCF,MAAO,GACPG,KAAMd,EAAKe,KAyBEC,EAtBO,WAAwD,IAAvDV,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGM,EAAcH,EAAcH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtE,OAAQC,EAAOP,MACb,IAAK,mBACH,OAAAc,wBAAA,GACKX,GAAK,IACRK,MAAOD,EAAON,UAElB,IAAK,kBACH,OAAAa,wBAAA,GACKX,GAAK,IACRQ,KAAMJ,EAAON,UAEjB,IAAK,qBACH,OAAAa,wBAAA,GACKX,GAAK,IACRK,MAAO,KAEX,QACE,OAAOL,I,OC5CAL,EALD,SAACiB,GAAa,MAAmB,CAC3Cf,KAAM,aACNC,QAASc,IAcIC,EATM,WAA8C,IAA7CD,EAAaX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAmBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,MACO,eADCC,EAAOP,KAEL,GAANiB,OAAAC,YAAWH,GAAKG,YAAKX,EAAON,UAErBc,GCTPI,EAAcC,0BAAgB,CAClCC,YAAanB,EACboB,OAAQT,EACRE,MAAOC,IAIIO,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,6CCdPC,GADoCC,IACcC,K,OCQlDC,EAA4B,SAAHC,GAAkB,IAAZjC,EAAIiC,EAAJjC,KACpCkC,EAAWJ,cACXK,EAAUN,GAAe,SAACzB,GAAK,OAAKA,EAAMkB,eAMhD,OACEc,eAAA,MAAI,UAAQ,OAAMC,SAAA,CAChBC,cAAA,MAAIC,UAAU,eAAcF,SAAErC,EAAKwC,KACnCF,cAAA,MAAIC,UAAU,eAAcF,SACzBrC,EAAKyC,WACJH,cAAA,QAAMC,UAAU,OAAO,UAAQ,gBAAeF,SAC5CC,cAAA,KAAGC,UAAU,qBAKnBD,cAAA,MAAIC,UAAU,2BAA0BF,SACtCC,cAAA,KACEC,UAAWG,IAAW,CACpB,mBAAoB1C,EAAKyC,UACzB,mBAAoBzC,EAAKyC,YACxBJ,SAEFrC,EAAK2C,UAIVL,cAAA,MAAIC,UAAU,8BAA6BF,SACzCC,cAAA,UACEM,QAAS,WA3BfV,EAASW,EA2BwB7C,KAC3B,UAAQ,eACRuC,UAAU,SACVtC,KAAK,SAAQoC,SAEbC,cAAA,QAAMC,UAAU,OAAMF,SACpBC,cAAA,KACEC,UAAWG,IAAW,CACpB,cAAeP,EACf,mBAAoBA,gBC7CvBW,EAA4B,SAAHb,GAAmB,IAAbjB,EAAKiB,EAALjB,MAC1C,OACEoB,eAAAW,WAAA,CAAAV,SAAA,CACoB,IAAjBrB,EAAMV,QACLgC,cAAA,KAAGC,UAAU,0BAAyBF,SAAC,wDAKzCD,eAAA,SAAOG,UAAU,+BAA8BF,SAAA,CAC7CC,cAAA,SAAAD,SACED,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,MAEJC,cAAA,MAAAD,SACEC,cAAA,QAAMC,UAAU,OAAMF,SACpBC,cAAA,KAAGC,UAAU,qBAIjBD,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,WAIRC,cAAA,SAAAD,SACGrB,EAAMgC,KAAI,SAAChD,GAAI,OACdsC,cAACN,EAAQ,CAAehC,KAAMA,GAAfA,EAAKwC,gBC5BnBS,EAAuB,WAClC,IAAAC,EAAwBrB,GAAe,SAACzB,GAAK,OAAKA,EAAMmB,UAAhDd,EAAKyC,EAALzC,MAAOG,EAAIsC,EAAJtC,KACTsB,EAAWJ,cAUjB,OACEM,eAAA,QACEG,UAAU,mBACVY,SAAU,SAACC,GAAK,OAAKA,EAAMC,kBAAiBhB,SAAA,CAE5CC,cAAA,KAAGC,UAAU,UAASF,SACpBC,cAAA,QAAMC,UAAU,SAAQF,SACtBD,eAAA,UAAQkB,MAAO1C,EAAM2C,SAfV,SAACH,GAClBlB,EAASsB,EAAsBJ,EAAMK,OAAOH,SAcK,UAAQ,eAAcjB,SAAA,CAC/DC,cAAA,UAAQgB,MAAM,MAAKjB,SAAC,QACpBC,cAAA,UAAQgB,MAAM,SAAQjB,SAAC,WACvBC,cAAA,UAAQgB,MAAM,YAAWjB,SAAC,qBAKhCD,eAAA,KAAGG,UAAU,qDAAoDF,SAAA,CAC/DC,cAAA,SACE,UAAQ,cACRrC,KAAK,OACLsC,UAAU,QACVmB,YAAY,YACZJ,MAAO7C,EACP8C,SA1BY,SAACH,GACnBlB,EAASsB,EAAuBJ,EAAMK,OAAOH,WA2BzChB,cAAA,QAAMC,UAAU,eAAcF,SAC5BC,cAAA,KAAGC,UAAU,8BAGfD,cAAA,QAAMC,UAAU,gBAAgBoB,MAAO,CAAEC,cAAe,OAAQvB,SAE7D5B,GACC6B,cAAA,UACE,UAAQ,oBACRrC,KAAK,SACLsC,UAAU,SACVK,QAAS,kBAAMV,EAASsB,iBCnDzBK,G,MAAmB,WAAH,OAC3BvB,cAAA,OAAKC,UAAU,SAAS,UAAQ,SAAQF,SACtCC,cAAA,OAAKC,UAAU,wBCOnB,SAASuB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAAsB,WACjC,IAAMnD,EAAcO,GAAe,SAACzB,GAAK,OAAKA,EAAMkB,eACpDoD,EAAwBC,mBAAsB,MAAKC,EAAAC,YAAAH,EAAA,GAA5CI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAAsCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5B/C,EAAWJ,cASjB,OAPAsD,qBAAU,WDQW,IAACC,ECPpBF,GAAe,IDOKE,ECND,OAAX/D,QAAW,IAAXA,OAAW,EAAXA,EAAa+D,ODMkBvB,EAAG,UAAA5C,OAAiBmE,KCLxDhB,KAAKU,GACLO,SAAQ,kBAAMH,GAAe,QAC/B,CAAC7D,IAGFc,eAAA,OAAKG,UAAU,kBAAkB,UAAQ,QAAOF,SAAA,CAC9CC,cAAA,OAAKC,UAAU,qBAEd2C,EACC5C,cAACuB,EAAM,IAEPzB,eAAA,OAAKG,UAAU,aAAYF,SAAA,CACzBD,eAAA,UAAQG,UAAU,kBAAiBF,SAAA,CACjCD,eAAA,OACEG,UAAU,0CACV,UAAQ,eAAcF,SAAA,CACvB,SAEa,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAakB,MAIhBF,cAAA,UACEM,QAAS,kBAAMV,EAASW,MACxB5C,KAAK,SACLsC,UAAU,SACV,UAAQ,mBAIZH,eAAA,OAAKG,UAAU,kBAAiBF,SAAA,CAC9BC,cAAA,KAAGC,UAAU,QAAQ,UAAQ,cAAaF,SAC5B,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAaqB,QAGhBP,eAAA,KAAGG,UAAU,QAAQ,UAAQ,aAAYF,SAAA,CAC3B,OAAXf,QAAW,IAAXA,KAAamB,UACZH,cAAA,UAAQC,UAAU,mBAAkBF,SAAC,SAErCC,cAAA,UAAQC,UAAU,kBAAiBF,SAAC,YAGrC,OACDC,cAAA,KAAGiD,KAAK,2BAA0BlD,SAAM,OAAJyC,QAAI,IAAJA,OAAI,EAAJA,EAAMU,oBC/C3CC,EAAgB,WAC3B,IAAMnE,EAAcO,GAAe,SAACzB,GAAK,OAAKA,EAAMkB,eAEpDoD,EAAwCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhDgB,EAAYd,EAAA,GAAEe,EAAef,EAAA,GAE9B5D,EAAQa,GAAe,SAACzB,GAAK,OAAKA,EAAMY,SAC9CkC,EAAwBrB,GAAe,SAACzB,GAAK,OAAKA,EAAMmB,UAAhDd,EAAKyC,EAALzC,MAAOG,EAAIsC,EAAJtC,KACTsB,EAAWJ,cAEjBsD,qBAAU,WACRO,GAAgB,GFHU7B,EAAY,UEKnCO,MAAK,SAACuB,GAAe,OAAK1D,EAAS2D,EAAiBD,OACpDN,SAAQ,kBAAMK,GAAgB,QAChC,IAEH,IAAMG,ECrBmB,SACzBC,EAAoB9D,GAER,IADVrB,EAAIqB,EAAJrB,KAAMH,EAAKwB,EAALxB,MAEJuF,EAAQ7E,YAAO4E,GAEnB,GAAItF,EAAO,CACT,IAAMwF,EAAcxF,EAAMyF,cAAcC,OAExCH,EAAWA,EAASzE,QAAO,SAACvB,GAAI,OAC9BA,EAAK2C,MAAMuD,cAAcE,SAASH,MAiBtC,OAbIrF,IACFoF,EAAWA,EAASzE,QAAO,SAACvB,GAC1B,OAAQY,GACN,KAAKd,EAAKuG,OACR,OAAQrG,EAAKyC,UACf,KAAK3C,EAAKwG,UACR,OAAOtG,EAAKyC,UACd,QACE,OAAOzC,OAKRgG,EDNcO,CAAYvF,EAAO,CAAEP,QAAOG,SAEjD,OACEwB,eAAAW,WAAA,CAAAV,SAAA,CACEC,cAAA,OAAKC,UAAU,UAASF,SACtBC,cAAA,OAAKC,UAAU,YAAWF,SACxBD,eAAA,OAAKG,UAAU,MAAKF,SAAA,CAClBC,cAAA,MAAIC,UAAU,QAAOF,SAAC,WAEtBC,cAAA,OAAKC,UAAU,QAAOF,SACpBC,cAACW,EAAU,MAGbX,cAAA,OAAKC,UAAU,QAAOF,SACnBqD,EAAepD,cAACuB,EAAM,IAAMvB,cAACQ,EAAQ,CAAC9B,MAAO8E,aAKrDxE,GAAegB,cAACmC,EAAS,QExC1B+B,EAAO,WAAH,OACRlE,cAACmE,IAAQ,CAACjF,MAAOA,EAAMa,SACrBC,cAACoE,IAAM,CAAArE,SACLC,cAACmD,EAAG,SAKVkB,IAASC,OAAOtE,cAACkE,EAAI,IAAKK,SAASC,eAAe,W","file":"static/js/main.e07f6804.chunk.js","sourcesContent":["export enum SORT {\n  ALL = '',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { SORT } from '../types/SortEnum';\n\ntype QueryAction = { type: 'filter/SET_QUERY'; payload: string };\ntype SortAction = { type: 'filter/SET_SORT'; payload: SORT };\ntype ClearAction = { type: 'filter/QUERY_CLEAR' };\n\ntype Action = QueryAction | SortAction | ClearAction;\n\nconst setQuery = (query: string): QueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setSort = (sortField: SORT): SortAction => ({\n  type: 'filter/SET_SORT',\n  payload: sortField,\n});\n\nconst clearQuery = (): ClearAction => ({ type: 'filter/QUERY_CLEAR' });\n\nexport const actions = {\n  setQuery,\n  setSort,\n  clearQuery,\n};\n\ninterface FilterState {\n  query: string;\n  sort: SORT;\n}\n\nconst initialState: FilterState = {\n  query: '',\n  sort: SORT.ALL,\n};\n\nconst filterReducer = (state: FilterState = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/SET_SORT':\n      return {\n        ...state,\n        sort: action.payload,\n      };\n    case 'filter/QUERY_CLEAR':\n      return {\n        ...state,\n        query: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","/*eslint-disable*/\nimport { Todo } from \"../types/Todo\";\n\ntype FetchAction = { type: \"todos/LOAD\"; payload: Todo[] };\n\nconst set = (todos: Todo[]): FetchAction => ({\n  type: \"todos/LOAD\",\n  payload: todos,\n});\n\nexport const actions = { set };\n\nconst todosReducer = (todos: Todo[] = [], action: FetchAction) => {\n  switch (action.type) {\n    case \"todos/LOAD\":\n      return [...todos, ...action.payload];\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const current = useAppSelector((state) => state.currentTodo);\n\n  const onOpenModal = (currentTodo: Todo) => {\n    dispatch(currentTodoActions.setTodo(currentTodo));\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          onClick={() => onOpenModal(todo)}\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames({\n                'far fa-eye': !current,\n                'far fa-eye-slash': current,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/*eslint-disable*/\nimport React from \"react\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { useDispatch } from \"react-redux\";\nimport { actions as filterActions } from \"../../features/filter\";\nimport { SORT } from \"../../types/SortEnum\";\n\nexport const TodoFilter: React.FC = () => {\n  const { query, sort } = useAppSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const updateSort = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setSort(event.target.value as SORT));\n  };\n\n  const updateQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select value={sort} onChange={updateSort} data-cy=\"statusSelect\">\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={updateQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: \"all\" }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.clearQuery())}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const [userLoading, setUserLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setUserLoading(true);\n    getUser(currentTodo?.userId as number)\n      .then(setUser)\n      .finally(() => setUserLoading(false));\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href=\"mailto:Sincere@april.biz\">{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { filterTodos } from './helpers/filterTodos';\nimport { actions as todosActions } from './features/todos';\nimport { Loader } from './components/Loader/Loader';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const [todosLoading, setTodosLoading] = useState(false);\n\n  const todos = useAppSelector((state) => state.todos);\n  const { query, sort } = useAppSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTodosLoading(true);\n    getTodos()\n      .then((todosFromServer) => dispatch(todosActions.set(todosFromServer)))\n      .finally(() => setTodosLoading(false));\n  }, []);\n\n  const visibleTodos = filterTodos(todos, { query, sort });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todosLoading ? <Loader /> : <TodoList todos={visibleTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","/*eslint-disable*/\nimport { SORT } from \"../types/SortEnum\";\nimport { Todo } from \"../types/Todo\";\n\ntype FilterType = {\n  sort: SORT;\n  query: string;\n};\n\nexport const filterTodos = (\n  initialTodos: Todo[],\n  { sort, query }: FilterType\n): Todo[] => {\n  let todoCopy = [...initialTodos];\n\n  if (query) {\n    const lowerSearch = query.toLowerCase().trim();\n\n    todoCopy = todoCopy.filter((todo) =>\n      todo.title.toLowerCase().includes(lowerSearch)\n    );\n  }\n\n  if (sort) {\n    todoCopy = todoCopy.filter((todo) => {\n      switch (sort) {\n        case SORT.ACTIVE:\n          return !todo.completed;\n        case SORT.COMPLETED:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n  }\n\n  return todoCopy;\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}